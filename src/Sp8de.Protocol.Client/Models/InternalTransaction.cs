// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Sp8de.Protocol.Client.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class InternalTransaction
    {
        /// <summary>
        /// Initializes a new instance of the InternalTransaction class.
        /// </summary>
        public InternalTransaction()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the InternalTransaction class.
        /// </summary>
        /// <param name="type">Possible values include: 'Simple',
        /// 'AggregatedCommit', 'AggregatedReveal', 'InternalContributor',
        /// 'InternalRequester', 'InternalValidator', 'System'</param>
        public InternalTransaction(string hash = default(string), string type = default(string), string fromProperty = default(string), string sign = default(string), string nonce = default(string), string data = default(string))
        {
            Hash = hash;
            Type = type;
            FromProperty = fromProperty;
            Sign = sign;
            Nonce = nonce;
            Data = data;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hash")]
        public string Hash { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Simple', 'AggregatedCommit',
        /// 'AggregatedReveal', 'InternalContributor', 'InternalRequester',
        /// 'InternalValidator', 'System'
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "from")]
        public string FromProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sign")]
        public string Sign { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "nonce")]
        public string Nonce { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "data")]
        public string Data { get; set; }

    }
}
